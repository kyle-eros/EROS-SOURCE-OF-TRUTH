MERGE `of-scheduler-proj.ops_config.tier_thresholds` T USING (WITH base_health AS (SELECT h.page_id AS creator_key, LOG10(1 + h.active_fans_7d) AS log_active_fans, h.message_net_7d, h.avg_earn_per_fan_7d, h.avg_spend_per_txn_7d, h.total_earnings_7d, h.renew_on_rate_7d, -h.expired_change_7d AS neg_expired_change_7d FROM `of-scheduler-proj.layer_04_semantic.v_page_health_7d` h), z AS (SELECT creator_key, (log_active_fans-AVG(log_active_fans) OVER())/NULLIF(STDDEV_SAMP(log_active_fans) OVER(),0) AS z_active, (message_net_7d-AVG(message_net_7d) OVER())/NULLIF(STDDEV_SAMP(message_net_7d) OVER(),0) AS z_msgnet, (avg_earn_per_fan_7d-AVG(avg_earn_per_fan_7d)OVER())/NULLIF(STDDEV_SAMP(avg_earn_per_fan_7d)OVER(),0) AS z_apf, (avg_spend_per_txn_7d-AVG(avg_spend_per_txn_7d)OVER())/NULLIF(STDDEV_SAMP(avg_spend_per_txn_7d)OVER(),0) AS z_spend, (total_earnings_7d-AVG(total_earnings_7d)OVER())/NULLIF(STDDEV_SAMP(total_earnings_7d)OVER(),0) AS z_total, (renew_on_rate_7d-AVG(renew_on_rate_7d)OVER())/NULLIF(STDDEV_SAMP(renew_on_rate_7d)OVER(),0) AS z_renew, (neg_expired_change_7d-AVG(neg_expired_change_7d)OVER())/NULLIF(STDDEV_SAMP(neg_expired_change_7d)OVER(),0) AS z_churn FROM base_health), s AS (SELECT creator_key, 0.30*COALESCE(z_active,0)+0.20*COALESCE(z_msgnet,0)+0.15*COALESCE(z_apf,0)+0.10*COALESCE(z_spend,0)+0.15*COALESCE(z_total,0)+0.05*COALESCE(z_renew,0)+0.05*COALESCE(z_churn,0) AS intensity FROM z) SELECT CURRENT_DATE('UTC') AS computed_date, COUNT(*) AS population_count, APPROX_QUANTILES(s.intensity,100)[OFFSET(40)] AS q40, APPROX_QUANTILES(s.intensity,100)[OFFSET(60)] AS q60, APPROX_QUANTILES(s.intensity,100)[OFFSET(90)] AS q90, APPROX_QUANTILES(h.active_fans_7d,100)[OFFSET(70)] AS af_p70, APPROX_QUANTILES(h.message_net_7d,100)[OFFSET(60)] AS msg_p60, APPROX_QUANTILES(h.message_net_7d,100)[OFFSET(70)] AS msg_p70, APPROX_QUANTILES(h.total_earnings_7d,100)[OFFSET(70)] AS tot_p70 FROM s JOIN `of-scheduler-proj.layer_04_semantic.v_page_health_7d` h ON h.page_id = s.creator_key) S ON T.computed_date = S.computed_date WHEN MATCHED THEN UPDATE SET population_count=S.population_count, q40=S.q40, q60=S.q60, q90=S.q90, af_p70=S.af_p70, msg_p60=S.msg_p60, msg_p70=S.msg_p70, tot_p70=S.tot_p70 WHEN NOT MATCHED THEN INSERT ROW;